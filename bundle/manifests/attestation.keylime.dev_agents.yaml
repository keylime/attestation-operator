apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: null
  name: agents.attestation.keylime.dev
spec:
  group: attestation.keylime.dev
  names:
    kind: Agent
    listKind: AgentList
    plural: agents
    singular: agent
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.pod
      name: Pod
      type: string
    - jsonPath: .status.node
      name: Node
      type: string
    - jsonPath: .spec.verifierName
      name: Verifier
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.verifier.operationalState
      name: State
      type: string
    - format: date-time
      jsonPath: .status.verifier.lastSuccessfulAttestation
      name: Last Successful Attestation
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Agent is the Schema for the agents API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AgentSpec defines the desired state of Agent
            properties:
              ekCertificateStore:
                description: EKCertificateStore contains all the configuration settings
                  for the verification of the EK certificate of the agent.
                properties:
                  enableVerification:
                    description: EnableVerification turns on EK certificate verification.
                      If this is enabled, you must also set either the SecretName
                      below, or the ControllerDirectoryPath.
                    type: boolean
                  secretName:
                    description: "SecretName is the name of a secret which should
                      contain CA certificates that should be used to verify the EK
                      certificate of the agent if EnableVerification is set. \n If
                      EnableVerification is true, but SecretName is empty, then the
                      controller will fall back to try to use the CA certificates
                      as set with the optional KEYLIME_TPM_CERT_STORE setting. NOTE:
                      It is recommended to use a secret though. However, in cases
                      where people do not feel comfortable to give the service account
                      of the controller access to secrets, or want to bake in the
                      secure payloads into the controller image or mount a volume/secret
                      into the controller for that purpose, this fallback mechanism
                      provides a way to accomodate that."
                    type: string
                required:
                - enableVerification
                - secretName
                type: object
              securePayload:
                description: SecurePayload contains all the configuration settings
                  for the Secure Payload mechanism of Keylime.
                properties:
                  agentVerify:
                    description: 'AgentVerify will additionally request to verify
                      with the agent that after the agent has been added to the verifier
                      that the bootstrap keys were delivered and derived successfully.
                      This means that the secure payload could technically be decrypted
                      by the agent. However, this does not verify unpacking of the
                      payload, just that the correct keys were derived on the agent.
                      NOTE: the verification mechanism fails at times, and is also
                      optional in the keylime_tenant CLI, so we make this switchable
                      here as well.'
                    type: boolean
                  enableSecurePayload:
                    description: EnableSecurePayload turns on the Secure Payload delivery
                      of Keylime. It happens during the process when an agent is added
                      to a verifier.
                    type: boolean
                  secretName:
                    description: "SecretName is the name of a secret which contents
                      should be delivered to the agent via the Secure Payload mechanism.
                      NOTE: If there is a change in this value after the agent has
                      been added to a verifier, this will effectively delete the agent
                      from the verifier and add it again! \n If EnableSecurePayload
                      is true, but SecretName is empty, then the controller will fall
                      back to try to use a directory as set with the optional KEYLIME_SECURE_PAYLOAD_DIR
                      setting. NOTE: It is recommended to use a secret though. However,
                      in cases where people do not feel comfortable to give the service
                      account of the controller access to secrets, or want to bake
                      in the secure payloads into the controller image or mount a
                      volume/secret into the controller for that purpose, this fallback
                      mechanism provides a way to accomodate that."
                    type: string
                required:
                - agentVerify
                - enableSecurePayload
                - secretName
                type: object
              verifierName:
                description: VerifierName is the verifier that the agent should be
                  scheduled on. The expected format is "IP:port" or "Host:port".
                type: string
            required:
            - ekCertificateStore
            - securePayload
            - verifierName
            type: object
          status:
            description: AgentStatus defines the observed state of Agent
            properties:
              ekCertificate:
                description: EKCertificate will be set if EK certificate verification
                  is activated for the agent
                properties:
                  authorityChains:
                    description: AuthorityChains will be populated with the certificate
                      chains of subject names of all intermediate and root CA certificates
                      that were used to verify the EK cert. Every possible path of
                      verification will populate its own chain which is why this is
                      a double array type. In reality the outer array is expected
                      to be of size 1. This will only be set on successful verification,
                      so only when `verified` is true.
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                  tpm:
                    description: TPM contains additional information about the EK
                      and the TPM that is a part of the EK certificate in the "Subject
                      Alternative Names" and "Subject Directory Attributes" X509v3
                      extensions.
                    properties:
                      firmwareVersion:
                        type: string
                      manufacturer:
                        type: string
                      model:
                        type: string
                      spec:
                        properties:
                          family:
                            type: string
                          level:
                            type: integer
                          revision:
                            type: integer
                        required:
                        - family
                        - level
                        - revision
                        type: object
                    type: object
                  verified:
                    description: Verified will be true if EK certificate verification
                      passes successfully. The chains to the CAs will be made available
                      in the `authorityChains` field.
                    type: boolean
                required:
                - verified
                type: object
              node:
                description: Node that the pod of the agent is running on and that
                  the agent is attesting
                type: string
              phase:
                description: Phase represents the phase that the agent is in from
                  the view of the controller
                type: string
              phaseMessage:
                description: PhaseMessage is a detailed explanation why the agent
                  is in that phase.
                type: string
              phaseReason:
                description: PhaseReason is a brief reason why the agent is in that
                  phase.
                type: string
              pod:
                description: Pod of the agent that is running the agent
                type: string
              registrar:
                description: Registrar reflects the status of the agent in the registrar
                properties:
                  agentCertificate:
                    description: AgentCert is the DER encoded server certificate of
                      the agent
                    format: byte
                    type: string
                  agentIP:
                    description: AgentIP is the IP of where to reach the agent
                    type: string
                  agentPort:
                    description: AgentPort is the port number of where the agent is
                      listening on
                    type: integer
                  aik:
                    description: 'AIK is base64 encoded. The AIK format is TPM2B_PUBLIC
                      from tpm2-tss. TODO: break this down'
                    format: byte
                    type: string
                  ek:
                    description: EK is the public key of the endorsement key
                    format: byte
                    type: string
                  ekCertificate:
                    description: EKCert is the DER encoded certificate for the endorsment
                      key
                    format: byte
                    type: string
                  regcount:
                    description: RegCount is the registration counter
                    type: integer
                type: object
              securePayloadDelivered:
                description: SecurePayloadDelivered denotes the secure payload that
                  was delivered to the agent if any at all.
                type: string
              verifier:
                description: 'Verifier reflects the status of the agent in the verifier.
                  NOTE: this will only be populated if the agent has been added to
                  a verifier.'
                properties:
                  acceptTPMEncAlgs:
                    items:
                      type: string
                    type: array
                  acceptTPMHashAlgs:
                    items:
                      type: string
                    type: array
                  acceptTPMSignAlgs:
                    items:
                      type: string
                    type: array
                  attestationCount:
                    type: integer
                  encAlg:
                    type: string
                  hasMBRefState:
                    type: boolean
                  hasRuntimePolicy:
                    type: boolean
                  hashAlg:
                    type: string
                  lastEventID:
                    type: string
                  lastReceivedQuote:
                    format: date-time
                    type: string
                  lastSuccessfulAttestation:
                    format: date-time
                    type: string
                  metadata:
                    type: string
                  operationalState:
                    type: string
                  operationalStateDescription:
                    type: string
                  severityLevel:
                    type: integer
                  signAlg:
                    type: string
                  tpmPolicy:
                    properties:
                      "0":
                        items:
                          type: string
                        type: array
                      "1":
                        items:
                          type: string
                        type: array
                      "2":
                        items:
                          type: string
                        type: array
                      "3":
                        items:
                          type: string
                        type: array
                      "4":
                        items:
                          type: string
                        type: array
                      "5":
                        items:
                          type: string
                        type: array
                      "6":
                        items:
                          type: string
                        type: array
                      "7":
                        items:
                          type: string
                        type: array
                      "8":
                        items:
                          type: string
                        type: array
                      "9":
                        items:
                          type: string
                        type: array
                      "10":
                        items:
                          type: string
                        type: array
                      "11":
                        items:
                          type: string
                        type: array
                      "12":
                        items:
                          type: string
                        type: array
                      "13":
                        items:
                          type: string
                        type: array
                      "14":
                        items:
                          type: string
                        type: array
                      "15":
                        items:
                          type: string
                        type: array
                      "16":
                        items:
                          type: string
                        type: array
                      "17":
                        items:
                          type: string
                        type: array
                      "18":
                        items:
                          type: string
                        type: array
                      "19":
                        items:
                          type: string
                        type: array
                      "20":
                        items:
                          type: string
                        type: array
                      "21":
                        items:
                          type: string
                        type: array
                      "22":
                        items:
                          type: string
                        type: array
                      "23":
                        items:
                          type: string
                        type: array
                      mask:
                        type: string
                    type: object
                  v:
                    format: byte
                    type: string
                  vtpmPolicy:
                    properties:
                      "0":
                        items:
                          type: string
                        type: array
                      "1":
                        items:
                          type: string
                        type: array
                      "2":
                        items:
                          type: string
                        type: array
                      "3":
                        items:
                          type: string
                        type: array
                      "4":
                        items:
                          type: string
                        type: array
                      "5":
                        items:
                          type: string
                        type: array
                      "6":
                        items:
                          type: string
                        type: array
                      "7":
                        items:
                          type: string
                        type: array
                      "8":
                        items:
                          type: string
                        type: array
                      "9":
                        items:
                          type: string
                        type: array
                      "10":
                        items:
                          type: string
                        type: array
                      "11":
                        items:
                          type: string
                        type: array
                      "12":
                        items:
                          type: string
                        type: array
                      "13":
                        items:
                          type: string
                        type: array
                      "14":
                        items:
                          type: string
                        type: array
                      "15":
                        items:
                          type: string
                        type: array
                      "16":
                        items:
                          type: string
                        type: array
                      "17":
                        items:
                          type: string
                        type: array
                      "18":
                        items:
                          type: string
                        type: array
                      "19":
                        items:
                          type: string
                        type: array
                      "20":
                        items:
                          type: string
                        type: array
                      "21":
                        items:
                          type: string
                        type: array
                      "22":
                        items:
                          type: string
                        type: array
                      "23":
                        items:
                          type: string
                        type: array
                      mask:
                        type: string
                    type: object
                required:
                - hasMBRefState
                - hasRuntimePolicy
                type: object
              verifierName:
                description: VerifierName is the verifier that the agent is scheduled
                  on. This will reflect the same value as the `.spec.verifierName`
                  once the controller has achieved that state.
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
